// Generated by view binder compiler. Do not edit!
package br.com.qrcred.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.qrcred.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnHibrido;

  @NonNull
  public final Button btnIr;

  @NonNull
  public final Button btnSatelite;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvDuration;

  private ActivityMapsBinding(@NonNull LinearLayout rootView, @NonNull Button btnHibrido,
      @NonNull Button btnIr, @NonNull Button btnSatelite, @NonNull TextView tvDistance,
      @NonNull TextView tvDuration) {
    this.rootView = rootView;
    this.btnHibrido = btnHibrido;
    this.btnIr = btnIr;
    this.btnSatelite = btnSatelite;
    this.tvDistance = tvDistance;
    this.tvDuration = tvDuration;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHibrido;
      Button btnHibrido = ViewBindings.findChildViewById(rootView, id);
      if (btnHibrido == null) {
        break missingId;
      }

      id = R.id.btnIr;
      Button btnIr = ViewBindings.findChildViewById(rootView, id);
      if (btnIr == null) {
        break missingId;
      }

      id = R.id.btnSatelite;
      Button btnSatelite = ViewBindings.findChildViewById(rootView, id);
      if (btnSatelite == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      TextView tvDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvDuration;
      TextView tvDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvDuration == null) {
        break missingId;
      }

      return new ActivityMapsBinding((LinearLayout) rootView, btnHibrido, btnIr, btnSatelite,
          tvDistance, tvDuration);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
