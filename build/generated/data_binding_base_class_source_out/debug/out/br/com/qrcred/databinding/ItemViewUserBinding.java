// Generated by view binder compiler. Do not edit!
package br.com.qrcred.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.qrcred.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemViewUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView TvRotuloUsuario;

  @NonNull
  public final ImageView imageViewUser;

  @NonNull
  public final RelativeLayout layoutUser;

  @NonNull
  public final TextView tvCartao;

  private ItemViewUserBinding(@NonNull ConstraintLayout rootView, @NonNull TextView TvRotuloUsuario,
      @NonNull ImageView imageViewUser, @NonNull RelativeLayout layoutUser,
      @NonNull TextView tvCartao) {
    this.rootView = rootView;
    this.TvRotuloUsuario = TvRotuloUsuario;
    this.imageViewUser = imageViewUser;
    this.layoutUser = layoutUser;
    this.tvCartao = tvCartao;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemViewUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemViewUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_view_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemViewUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TvRotuloUsuario;
      TextView TvRotuloUsuario = ViewBindings.findChildViewById(rootView, id);
      if (TvRotuloUsuario == null) {
        break missingId;
      }

      id = R.id.imageViewUser;
      ImageView imageViewUser = ViewBindings.findChildViewById(rootView, id);
      if (imageViewUser == null) {
        break missingId;
      }

      id = R.id.layout_User;
      RelativeLayout layoutUser = ViewBindings.findChildViewById(rootView, id);
      if (layoutUser == null) {
        break missingId;
      }

      id = R.id.tvCartao;
      TextView tvCartao = ViewBindings.findChildViewById(rootView, id);
      if (tvCartao == null) {
        break missingId;
      }

      return new ItemViewUserBinding((ConstraintLayout) rootView, TvRotuloUsuario, imageViewUser,
          layoutUser, tvCartao);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
